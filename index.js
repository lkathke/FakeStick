var proxy = require("node-tcp-proxy");

var util = require("util");
var serviceHosts = "10.100.243.86";
var servicePorts = 3240
let attached = 0;
var newProxy = proxy.createProxy(3240, serviceHosts, servicePorts, {
    upstream: function(context, data) {
       /* console.log(util.format("Client %s:%s sent:",
            context.proxySocket.remoteAddress,
            context.proxySocket.remotePort)); */
        // do something with the data and return modified data
        return data;
    },
    downstream: function(context, data) {
       /* console.log(util.format("Service %s:%s sent:",
            context.serviceSocket.remoteAddress,
            context.serviceSocket.remotePort)); */
        // do something with the data and return modified data
        //if(attached < 3) {
            replace(data, new Buffer([0x0, 0x0, 0x0, 0x5, 0x46, 0xf4, 0x0, 0x01]), new Buffer([ 0x0, 0x0, 0x0, 0x5, 0x05, 0x8f, 0x63,0x87 ]));
            replace(data, new Buffer([0x12, 0x01, 0x00, 0x03, 0x00, 0x00, 0x00, 0x09, 0xf4,0x46, 0x01,0x00]), new Buffer([0x12, 0x01, 0x00, 0x03, 0x00, 0x00, 0x00, 0x09, 0x8f,0x05, 0x87,0x63]))

            
            //replace(data, new Buffer([0xf4,0x46, 0x01,0x00]), new Buffer([0x8f,0x05, 0x87,0x63]))
            //replace(data, new Buffer([0x46, 0xf4]), new Buffer([0x05, 0x8f ]));
            let f = [0x31 , 0x00 , 0x2d , 0x00 , 0x30 , 0x00 , 0x30 , 0x00 , 0x30 , 0x00 , 0x30 , 0x00 , 0x3a , 0x00 , 0x30 , 0x00 , 0x30 , 0x00 , 0x3a , 0x00 , 0x30 , 0x00 , 0x34 , 0x00 , 0x2e , 0x00 , 0x30 , 0x00 , 0x2d , 0x00 , 0x31 , 0x00];
            let r = [0x39,  0x00, 0x44  , 0x00 , 0x39 , 0x00 , 0x46 , 0x00 , 0x43 , 0x00 , 0x35 , 0x00 , 0x43 , 0x00 , 0x36 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00];
        // replace(data, new Buffer([0x31, 0x00, 0x2d, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x3a, 0x00, 0x30, 0x00, 0x30, 0x00, 0x3a, 0x00, 0x30, 0x00, 0x31, 0x00, 0x2e, 0x00, 0x32, 0x00, 0x2d, 0x00, 0x32, 0x00, 0x2e, 0x00, 0x31, 0x00]),
            //              new Buffer([0x39, 0x00, 0x44, 0x00, 0x39, 0x00, 0x46, 0x00, 0x43, 0x00, 0x35, 0x00, 0x43, 0x00, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]))
            replace(data, new Buffer(f), new Buffer(r));
           
        //}
         return data;
    }
  
});


function replace(/*Buffer*/ data, /*Buffer*/ pattern, /*Buffer*/ replace) {
    let position = data.indexOf(pattern);
    if(position != -1) {
        console.log("Found!");
        attached++;
    }
        
    while (position !== -1) {
      data.fill(0, /*from*/ position, /*to*/ position + pattern.length);
   
      replace.copy(
        /*to*/ data,
        /*at*/ position, 
        /*from*/ 0, 
        /*to*/ pattern.length
      );      
      // continue search:
      position = data.indexOf(pattern, /*starting at*/ position + pattern.length + 1);
    }
   }